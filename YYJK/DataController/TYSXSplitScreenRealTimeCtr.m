//
//  TYSXSplitScreenRealTimeCtr.m
//  tysx
//
//  Created by zwc on 15/1/4.
//  Copyright (c) 2015å¹´ huangjia. All rights reserved.
//

#import "TYSXSplitScreenRealTimeCtr.h"
#import "NSString+JSONCategory.h"

@implementation TYSXSplitScreenRealTimeCtr {
    NSMutableArray *pvArray;
    NSMutableArray *uvArray;
    NSMutableArray *yesterdayPvArray;
    NSMutableArray *yesterdayUvArray;
    NSInteger maxHourValue;
}

- (id)initWithCacheType:(CacheType)cacheType {
    if (self = [super initWithCacheType:cacheType]) {
        if (kNeedVirtualData) {
            NSString *jsonStr = @"{\"wap\":[[\"2015-01-07\",0,11185,11242,27842,28956,872,816,4027,11254],[\"2015-01-07\",1,7539,7747,21883,23767,389,436,2424,6146],[\"2015-01-07\",2,5956,6063,18890,21101,524,445,1991,3790],[\"2015-01-07\",3,5523,5552,18058,19834,271,312,1740,2965],[\"2015-01-07\",4,5458,5448,18275,18662,536,446,1934,2864],[\"2015-01-07\",5,6303,6433,19556,20175,286,319,1588,3267],[\"2015-01-07\",6,9192,9431,24817,25259,591,511,2366,5559],[\"2015-01-07\",7,12411,12734,28943,28972,336,301,2319,8183],[\"2015-01-07\",8,13934,14049,31567,30902,622,593,2660,10557],[\"2015-01-07\",9,17427,18277,36421,37396,742,942,3083,11346],[\"2015-01-07\",10,20208,28006,37647,48020,1486,1299,4191,10960],[\"2015-01-07\",11,27437,29593,45454,49671,1351,1430,4290,8166],[\"2015-01-07\",12,30690,32698,50892,54566,1223,1173,4288,8462],[\"2015-01-07\",13,28240,26832,44036,46271,1259,1225,4564,13127],[\"2015-01-07\",15,23571,28772,36562,49524,1113,1296,4919,18631],[\"2015-01-07\",16,26037,27463,37468,47181,869,1166,4900,14376],[\"2015-01-07\",17,28388,30403,42162,49581,0,1095,0,12525],[\"2015-01-07\",18,28169,32676,47987,53106,0,1592,0,13774],[\"2015-01-07\",19,28039,27669,50897,51244,0,1307,0,11969],[\"2015-01-07\",20,30615,27612,55184,53714,0,1244,0,9302],[\"2015-01-07\",21,33576,29032,57633,57461,0,1323,0,9455],[\"2015-01-07\",22,2,24551,11,51684,0,1471,0,8766],[\"2015-01-07\",23,0,17497,0,39719,0,665,0,5916]],\"4g\":[[\"2015-01-08\",0,26102,25579,105733,105446,8197,8230,20064,23181,0,0,0,0,0,0],[\"2015-01-08\",1,19326,18357,87890,80888,6756,7102,15040,21019,0,2993,0,13328,46,73],[\"2015-01-08\",2,14456,13026,62947,55417,4661,5648,9487,18204,0,2138,0,9035,0,48],[\"2015-01-08\",3,12066,10045,51568,36043,4120,5314,8066,17555,0,1408,0,6951,26,28],[\"2015-01-08\",4,11781,9618,48783,36835,3341,5246,6083,17740,0,1490,0,6530,25,18],[\"2015-01-08\",5,14024,11951,55038,43450,4482,6027,7985,18961,0,1408,0,6675,0,40],[\"2015-01-08\",6,21415,19162,78936,65651,6969,8642,12554,23949,0,2473,0,10204,0,32],[\"2015-01-08\",7,27739,26845,101747,89892,10356,11564,19300,27716,0,3368,0,14244,0,48],[\"2015-01-08\",8,31983,27418,118507,88213,12791,12933,22560,30053,0,4129,0,16257,0,52],[\"2015-01-08\",9,36540,34214,135720,106959,16394,16238,27744,34471,4706,4978,20431,19050,0,90],[\"2015-01-08\",10,52009,45693,162534,140637,25546,18991,38532,35407,5269,6007,21064,22140,0,73]],\"pc\":[[\"2015-01-08\",0,566,273,1088,694,154,166,193,209,14,11,42,17,32,34,80,83],[\"2015-01-08\",1,400,418,664,672,127,120,149,141,13,9,25,21,16,12,40,17],[\"2015-01-08\",2,452,631,672,900,114,114,132,136,8,5,20,8,13,4,27,11],[\"2015-01-08\",3,319,588,534,758,117,116,133,131,6,6,10,16,10,5,22,19],[\"2015-01-08\",4,460,617,591,789,118,105,126,122,2,5,2,7,2,6,3,8],[\"2015-01-08\",5,450,457,681,607,139,131,160,147,1,5,1,8,7,5,8,9],[\"2015-01-08\",6,528,576,901,960,191,180,228,219,2,7,2,11,14,13,68,22],[\"2015-01-08\",7,463,564,1062,1274,286,269,368,334,6,5,15,5,37,35,104,46],[\"2015-01-08\",8,913,892,2622,2319,686,765,852,968,10,6,31,11,56,80,74,124],[\"2015-01-08\",9,2789,2871,8245,8370,3203,3252,4074,3971,15,23,37,39,37,44,57,61],[\"2015-01-08\",10,1805,1935,5191,5412,1773,1712,2288,2135,28,12,54,21,27,14,37,16]],\"c5\":[[\"2015-01-08\",0,26102,25579,105733,105446,8197,8230,20064,23181,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,204,188],[\"2015-01-08\",1,371178,354996,1816524,1698786,138834,144576,298458,407682,0,71022,0,308742,0,0,0,0,0,0,0,0,3438,0,41076,0,126,0,144,0,7770,4620],[\"2015-01-08\",2,275544,250164,1299942,1168668,95310,112482,190458,349722,0,50442,0,208929,0,0,0,0,0,0,0,0,2052,0,26964,0,90,0,108,0,4620,2940],[\"2015-01-08\",3,228888,180810,1061046,648774,82836,103860,162612,332280,0,33117,0,160062,36,0,1026,0,0,0,0,0,1656,0,21168,0,108,0,108,0,5082,2184],[\"2015-01-08\",4,223398,183924,1000548,771912,68562,102996,125190,338076,0,34398,0,149415,18,0,18,0,0,0,0,0,1926,0,22446,0,72,0,72,0,5166,924],[\"2015-01-08\",5,266202,229590,1124316,907002,92736,119394,162288,361422,0,33054,0,153363,36,0,36,0,0,0,0,0,2340,0,27684,0,216,0,216,0,4872,2562],[\"2015-01-08\",6,413910,372924,1629072,1363212,149580,180036,259236,467766,0,57204,0,232050,36,0,54,0,0,0,0,0,4986,0,65250,0,432,0,486,0,6174,1848],[\"2015-01-08\",7,542700,527418,2127294,1895922,223866,244620,398088,553050,0,78099,0,321363,72,18,306,18,0,0,0,0,7848,0,99486,0,342,0,378,0,6426,3066],[\"2015-01-08\",8,621252,493524,2418840,1587834,294534,271764,487638,597168,0,94416,0,369516,54,0,252,0,0,0,0,0,7722,0,95814,0,414,0,450,0,7350,3402],[\"2015-01-08\",9,736794,615852,2870172,1925262,346212,370422,572040,733338,107394,113484,455007,430269,144,0,2214,0,0,0,0,0,13410,0,152874,0,9846,0,13248,0,8568,4788],[\"2015-01-08\",10,996912,880020,3311910,2920266,512100,398142,773478,724032,119427,134820,471702,499800,126,0,540,0,0,0,0,0,11106,0,135072,0,2700,0,3096,0,8988,10290]],\"c4\":[[\"2015-01-08\",0,26102,25579,105733,105446,8197,8230,20064,23181,0,0,0,0,0,0],[\"2015-01-08\",1,19326,18357,87890,80888,6756,7102,15040,21019,0,2993,0,13328,32,37],[\"2015-01-08\",2,14456,13026,62947,55417,4661,5648,9487,18204,0,2138,0,9035,23,22],[\"2015-01-08\",3,12066,10045,51568,36043,4120,5314,8066,17555,0,1408,0,6951,27,24],[\"2015-01-08\",4,11781,9618,48783,36835,3341,5246,6083,17740,0,1490,0,6530,24,4],[\"2015-01-08\",5,14024,11951,55038,43450,4482,6027,7985,18961,0,1408,0,6675,27,21],[\"2015-01-08\",6,21415,19162,78936,65651,6969,8642,12554,23949,0,2473,0,10204,17,12],[\"2015-01-08\",7,27739,26845,101747,89892,10356,11564,19300,27716,0,3368,0,14244,19,25],[\"2015-01-08\",8,31983,27418,118507,88213,12791,12933,22560,30053,0,4129,0,16257,31,29],[\"2015-01-08\",9,36540,34214,135720,106959,16394,16238,27744,34471,4706,4978,20431,19050,25,24],[\"2015-01-08\",10,52009,45693,162534,140637,25546,18991,38532,35407,5269,6007,21064,22140,26,29]],\"c3\":[[\"2015-01-08\",0,11266,11185,24897,27842,0,0,0,0],[\"2015-01-08\",1,7198,7539,15829,21883,0,389,0,1374],[\"2015-01-08\",2,4916,5956,10048,18890,0,264,0,914],[\"2015-01-08\",3,4322,5523,8521,18058,0,169,0,671],[\"2015-01-08\",4,3535,5458,6506,18275,0,148,0,585],[\"2015-01-08\",5,4758,6303,8516,19556,0,166,0,628],[\"2015-01-08\",6,7512,9192,13394,24817,0,251,0,846],[\"2015-01-08\",7,11183,12411,20524,28943,0,351,0,1059],[\"2015-01-08\",8,13797,13934,23917,31567,0,367,0,1339],[\"2015-01-08\",9,17495,17427,29457,36421,408,426,1236,1439],[\"2015-01-08\",10,26728,20208,40515,37647,418,413,1398,1660]],\"iphone\":[[\"2015-01-08\",0,26102,25579,105733,105446,0,0,0,0],[\"2015-01-08\",1,19326,18357,87890,80888,0,39,0,86],[\"2015-01-08\",2,14456,13026,62947,55417,0,17,0,36],[\"2015-01-08\",3,12066,10045,51568,36043,0,12,0,26],[\"2015-01-08\",4,11781,9618,48783,36835,0,8,0,23],[\"2015-01-08\",5,14024,11951,55038,43450,0,9,0,17],[\"2015-01-08\",6,21415,19162,78936,65651,0,17,0,37],[\"2015-01-08\",7,27739,26845,101747,89892,0,43,0,109],[\"2015-01-08\",8,31983,27418,118507,88213,0,45,0,92],[\"2015-01-08\",9,36540,34214,135720,106959,82,81,266,182],[\"2015-01-08\",10,52009,45693,162534,140637,89,108,283,247]]}";
            responeData = [jsonStr JSONValue];
        }
    }
    return self;
}

- (void)allocDataContainer {
    pvArray = [NSMutableArray array];
    uvArray = [NSMutableArray array];
    yesterdayUvArray = [NSMutableArray array];
    yesterdayPvArray = [NSMutableArray array];
}

- (void)clearDataContainer {
    [pvArray removeAllObjects];
    [uvArray removeAllObjects];
    [yesterdayPvArray removeAllObjects];
    [yesterdayUvArray removeAllObjects];
}

- (void)reloadData {
    [super reloadData];
    if (kNeedVirtualData) {
        for (int i = 0; i < 24; i++) {
            int value = arc4random() % 200 + 300;
            [pvArray addObject:[NSNumber numberWithInt:value]];
            [uvArray addObject:[NSNumber numberWithInt:value - arc4random() % 50]];
            
            value = arc4random() % 200 + 100;
            
            [yesterdayPvArray addObject:[NSNumber numberWithInt:value]];
            [yesterdayUvArray addObject:[NSNumber numberWithInt:value - arc4random() % 50]];
        }
        return;
    }
    pvArray = [@[@0, @0, @0, @0,@0, @0, @0, @0,@0, @0, @0, @0,@0, @0, @0, @0,@0, @0, @0, @0,@0, @0, @0, @0] mutableCopy];
    uvArray = [@[@0, @0, @0, @0,@0, @0, @0, @0,@0, @0, @0, @0,@0, @0, @0, @0,@0, @0, @0, @0,@0, @0, @0, @0] mutableCopy];
    yesterdayPvArray = [@[@0, @0, @0, @0,@0, @0, @0, @0,@0, @0, @0, @0,@0, @0, @0, @0,@0, @0, @0, @0,@0, @0, @0, @0] mutableCopy];
    yesterdayUvArray = [@[@0, @0, @0, @0,@0, @0, @0, @0,@0, @0, @0, @0,@0, @0, @0, @0,@0, @0, @0, @0,@0, @0, @0, @0] mutableCopy];
    
    NSString *dataKey = nil;
    switch (_selectedPlatType) {
        case 0:
            dataKey = @"c5";
            break;
        case 1:
            dataKey = @"c4";
            break;
        case 2:
            dataKey = @"c3";
            break;
        case 3:
            dataKey = @"wap";
            break;
        case 4:
            dataKey = @"iphone";
            break;
        case 5:
            dataKey = @"4g";
            break;
        case 6:
            dataKey = @"pc";
            break;
            
        default:
            break;
    }
    maxHourValue = 0;
    NSDictionary *data = (NSDictionary *)responeData;
    NSArray *dataList = [data objectForKey:dataKey];
    for (int i = 0; i < [dataList count]; i++) {
        NSArray *cellData = dataList[i];
        int index = [cellData[1] intValue];
        if ([cellData[0] isEqualToString:self.lastDateStr]) {
            maxHourValue = MAX(maxHourValue, index);
            if ([[self platSubTypeList][_selectedSubPlatType] isEqualToString:@"è®¢è´­è¯·æ±"]) {
                int cellDataLength = (int)[cellData count];
                [pvArray replaceObjectAtIndex:index withObject:cellData[cellDataLength - 1]];
            }
            else {
                [uvArray replaceObjectAtIndex:index withObject:cellData[_selectedSubPlatType * 2 + 2]];
                [pvArray replaceObjectAtIndex:index withObject:cellData[_selectedSubPlatType * 2 + 3]];
            }
        }
        else {
            if ([[self platSubTypeList][_selectedSubPlatType] isEqualToString:@"è®¢è´­è¯·æ±"]) {
                int cellDataLength = (int)[cellData count];
                [yesterdayPvArray replaceObjectAtIndex:index withObject:cellData[cellDataLength - 1]];
            }
            else {
                [yesterdayUvArray replaceObjectAtIndex:index withObject:cellData[_selectedSubPlatType * 2 + 2]];
                [yesterdayPvArray replaceObjectAtIndex:index withObject:cellData[_selectedSubPlatType * 2 + 3]];
            }
        }
    }
    maxHourValue += 1;
}

- (void)setSelectedPlatType:(int)selectedPlatType {
    if (_selectedPlatType != selectedPlatType) {
        _selectedPlatType = selectedPlatType;
        _selectedSubPlatType = 0;
        [self reloadData];
    }
}

- (void)setSelectedSubPlatType:(int)selectedSubPlatType {
    if (_selectedSubPlatType != selectedSubPlatType) {
        _selectedSubPlatType = selectedSubPlatType;
        [self reloadData];
    }
}

- (NSInteger)maxHour {
    if (kNeedVirtualData) {
        return 13;
    }
    return maxHourValue;
}

- (NSArray *)pvData {
    if (kNeedVirtualData) {
    }
    return pvArray;
}

- (NSArray *)uvData {
    if (kNeedVirtualData) {
        
    }
    return uvArray;
}

- (NSArray *)yesterdayPvData {
    if (kNeedVirtualData) {
        
    }
    return yesterdayPvArray;
}

- (NSArray *)yesterdayUvData {
    if (kNeedVirtualData) {
        
    }
    return yesterdayUvArray;
}

- (NSArray *)platNameList {
    if (kNeedVirtualData) {
        return @[@"é¡¹ç®ä¸", @"é¡¹ç®äº", @"é¡¹ç®ä¸", @"é¡¹ç®å", @"é¡¹ç®äº", @"é¡¹ç®å­", @"é¡¹ç®ä¸"];
    }
    return @[@"å®¢æ·ç«¯5", @"å®¢æ·ç«¯4", @"å®¢æ·ç«¯3", @"WAP", @"iPhone", @"ç±ç4G", @"PC"];
}

- (NSArray *)platSubTypeList {
    NSArray *ret = nil;
    switch (_selectedPlatType) {
        case 0:
            ret = @[@"è®¿é®", @"ç»å½", @"æ­æ¾", @"çè¨", @"æç¥¨", @"åä¸æ»å¨", @"æ¨é", @"è®¢è´­è¯·æ±"];
            break;
        case 1:
            ret = @[@"è®¿é®", @"ç»å½", @"æ­æ¾", @"è®¢è´­è¯·æ±"];
            break;
        case 2:
            ret = @[@"ç»å½", @"æ­æ¾"];
            break;
        case 3:
            ret = @[@"ç»å½", @"æ­æ¾"];
            break;
        case 4:
            ret = @[@"è®¿é®", @"æ­æ¾"];
            break;
        case 5:
            ret = @[@"è®¿é®", @"ç»å½", @"æ­æ¾", @"è®¢è´­è¯·æ±"];
            break;
        case 6:
            ret = @[@"è®¿é®", @"ç´æ­", @"ç¹æ­", @"åç"];
            break;
        default:
            break;
    }
    if (kNeedVirtualData) {
        NSInteger arrLength = [ret count];
        NSMutableArray *temp = [NSMutableArray array];
        for (int i = 0; i < arrLength; i++) {
            [temp addObject:[NSString stringWithFormat:@"å­é¡¹ç®%d", i + 1]];
        }
        ret = [temp copy];
    }
    return ret;
}

+ (NSString *)path {
    return @"/chartsAction!getData.ds";
}

- (NSDictionary *)configParams {
    endDateStr = stringWithDate([NSDate dateWithTimeIntervalSinceNow:0]);
    willShowDate = [NSDate dateWithTimeIntervalSinceNow:0];
    return @{@"dtype":@5,
             @"sdate":@"",
             @"edate":endDateStr};
}

- (void)successWithResponse:(id)responseObject {
    _resultInfo = @"è¯¥å¤©æ ç½ç»æ°æ®";
    NSDictionary *responseDic = (NSDictionary *)responseObject;
    lastDate = willShowDate;
    _result = NetworkBaseResult_Success;
    _resultInfo = @"æåè·åç½ç»æ°æ®";
    responeData = responseDic;
}

@end
